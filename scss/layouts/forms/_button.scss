[class*='is-button'] {
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
  font-size: $font-size-button;
  text-decoration: none;
  text-transform: capitalize;
  padding: 0.5rem 1rem;
  position: relative;
  @include flexbox();
  @include justify-content(center);
  @include align-items(center);
  border: none;
  outline: none;
  line-height: inherit;
  @include user-select(none);
  overflow: hidden;
  vertical-align: middle;
  @include radius(4px);
  cursor: pointer;
  @include prefix(
    transition,
    (all 0.5s ease-in-out),
    ('webkit', 'ms', 'moz', 'o')
  );
  &:focus {
    border-color: var(--primary-color);
  }
  &.is-bg {
    color: var(--white-color);
    background-color: var(--secondary-300);
    &:disabled,
    &.is-disable {
      background-color: var(--body-color);
      cursor: not-allowed;
      box-shadow: none;
      &:hover {
        background-color: var(--body-color);
      }
    }
    &:hover {
      background-color: var(--secondary-200);
    }
  }
  &.is-auto {
    min-width: initial;
    min-height: initial;
  }
  &.is-full-line {
    width: 100%;
  }
  
  &.is-border {
    background-color: var(--white-color);
    color: var(--body-600);
    border: 1px solid;
    border-color: var(--body-300);
    &.is-icon {
      @include flexbox();
      @include justify-content(start);
      @include align-items(center);
      color: var(--body-color);
      i {
        margin-right: 0.5rem;
      }
    }
    &.is-bg-white {
      background-color: var(--white-color);
      border-color: var(--border-color);
      padding: 0.25rem 0.5rem;
      color: var(--body-color);
      font-weight: 400;
    }
    &:hover {
      border-color: var(--primary-color);
      background-color: var(--primary-light);
    }
    &:disabled,
    &.is-disable {
      color: var(--white-color);
      background-color: transparent;
      border: 1px solid var(--body-color);
      cursor: not-allowed;
      &:hover {
        background-color: transparent;
        color: var(--body-color);
        border-color: var(--body-color);
      }
    }
  }
  &.is-icon {
    @include justify-content(space-between);
    i,
    svg {
      margin-right: 0.5rem;
      font-size: 0.9375rem;
    }
    &.is-filter-clear {
      color: var(--primary-500);
      svg {
        fill: var(--primary-500);
      }
    }
  }
  &:disabled,
  &.is-disable {
    color: var(--white-color);
    background-color: transparent;
    border: 1px solid var(--border-color);
    cursor: not-allowed;
    box-shadow: none;
    &:hover {
      background-color: transparent;
      color: var(--body-color);
      border-color: var(--border-color);
    }
  }
  &.is-clear {
    background-color: transparent;
    border-width: 0;
    min-width: auto;
    @include justify-content(flex-start);
    @include align-items(center);
    padding: 0;
    min-height: initial;
    min-width: initial;
    .btn-icon {
      width: 26px;
      height: 26px;
      @include flexbox();
      @include justify-content(center);
      @include align-items(center);
      @include flex-direction(column);
      @include radius(50%);
      margin-left: 0.5rem;
      @include flex-value(0 0 26px);
      i {
        margin: 0;
        font-size: $font-size-h5;
      }
    }
    &.is-primary {
      color: var(--primary-300);
      .btn-icon {
        border: 1px solid var(--primary-color);
      }
      &:hover {
        color: var(--primary-200);
        .btn-icon {
          border: 1px solid var(--primary-200);
        }
      }
    }
    &.is-secondary {
      color: var(--secondary-300);
      .btn-icon {
        border: 1px solid var(--secondary-300);
      }
      &:hover {
        color: var(--secondary-200);
        .btn-icon {
          border: 1px solid var(--secondary-200);
        }
      }
    }
    &:hover {
      span:not(:last-child) {
        text-decoration: underline;
      }
    }
  }
}

[role='button'] {
  &:focus {
    outline: none;
    border: none;
  }
}

.buttons {
  button,
  a {
    &:not(:last-child) {
      margin-right: 1rem;
    }
  }
  &.is-center {
    @include flexbox();
    @include justify-content(center);
    @include align-items(center);
  }
  &.is-between {
    @include flexbox();
    @include justify-content(space-between);
    @include align-items(center);
  }
  &.is-end {
    @include flexbox();
    @include justify-content(flex-end);
    @include align-items(center);
  }
}

.buttons {
  @include flexbox();
  @include align-items(center);
  button,
  a {
    &:not(:last-child) {
      margin-right: 1rem;
    }
  }
  &.is-center {
    @include justify-content(center);
  }
  &.is-between {
    @include justify-content(space-between);
  }
  &.is-end {
    @include justify-content(flex-end);
  }
  &.is-start {
    @include justify-content(flex-start);
  }
}

